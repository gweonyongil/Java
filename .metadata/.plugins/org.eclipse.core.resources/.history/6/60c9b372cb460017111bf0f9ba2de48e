package controller.compare;

import java.util.ArrayList;

import javax.swing.JTextPane;

public class CompareLine implements CmpLine{

	ArrayList<Line> compared_left = new ArrayList<Line>();
	ArrayList<Line> compared_right = new ArrayList<Line>();
	
	@Override
	public ArrayList<Line> constructLine(JTextPane text_pane) {
		// TODO Auto-generated method stub
		
		ArrayList<Line> contents = new ArrayList<Line>();
		
		String[] contents_str = text_pane.getText().split("\n");
		for(String str : contents_str){
			NotComparedLine line = new NotComparedLine(str);
			contents.add(line);
		}
		
		return contents;
	}

	@Override
	public void matchEqualLine(ArrayList<Line> notCompared_left, ArrayList<Line> notCompared_right) {
		// TODO Auto-generated method stub
		int left_size = notCompared_left.size() + 1;
		int right_size = notCompared_right.size() + 1;
		
		int LCS_count = 0;
		int max_matching_count;
		int[][] table = new int[right_size][left_size];
		
		for(int i = 0; i < left_size; i++){
			table[0][i] = 0;
		}
		
		//Calculation Table Index and LCS Count
		for(int i = 1; i < right_size; i++){
			max_matching_count = 0;
			table[i][0] = 0;
			for(int j = 1; j < left_size; j++){
				if(notCompared_left.get(i).equals(notCompared_right.get(j))){
					max_matching_count = table[i-1][j-1] + 1;
					table[i][j] = max_matching_count;
				}
				else{
					if(table[i][j-1] > table[i][j])
						table[i][j] = table[i][j-1];
					else
						table[i][j] = table[i-1][j];
				}
			}
			if(LCS_count < max_matching_count)
				LCS_count = max_matching_count;
		}
		
		//Match line positions of left contents and right contents
		int matching_line_count = 0;
		for(int j = 1; j < left_size; j++){
			ComparedLine compared_left_line = new ComparedLine(notCompared_left.get(j-1).line);
			compared_left.add(compared_left_line);
			for(int i = 1; i < right_size; i++){
				ComparedLine compared_right_line = new ComparedLine(notCompared_right.get(i-1).line);
				compared_left.add(compared_right_line);
				if(table[i][j] == matching_line_count + 1){
					
				}
			}
		}
		
	}

}
